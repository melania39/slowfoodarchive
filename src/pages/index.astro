---
import Airtable from 'airtable';
// MODIFICA QUI: Import necessari per la transizione
import { ViewTransitions, slide } from 'astro:transitions';

// Configura Airtable
const base = new Airtable({
  apiKey: import.meta.env.PUBLIC_AIRTABLE_API_KEY
}).base(import.meta.env.PUBLIC_AIRTABLE_BASE_ID);

// Recupera i dati
let items = [];
try {
  const records = await base(import.meta.env.PUBLIC_AIRTABLE_TABLE_NAME)
    .select({ maxRecords: 100 })
    .all();

  items = records.map(record => ({
    id: record.id,
    name: record.fields.Name,
    description: record.fields.Description,
    category: record.fields.Category,
    region: record.fields.Region,
    seasonality: record.fields.Seasonality,
    producers: record.fields.Producers,
    image: record.fields.Edited?.[0]?.url,
  }));
} catch (error) {
  console.error('Errore caricamento dati:', error);
}

const titolo = "Slow Food Archive";

// Filtro per la stagionalità
const today = new Date();
const currentMonthName = today.toLocaleString('en-US', { month: 'long' });
const seasonalItems = items.filter(item => {
  return item.seasonality && item.seasonality.includes(currentMonthName);
});
---

<html lang="it">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{titolo}</title>

    <ViewTransitions />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700;900&display=swap" rel="stylesheet">

    {/* Blocco <style> corretto e unificato */}
    <style>
      :root {
        --card-size: 180px;
      }

      body {
        background-color: #492a2a;
        color: #fff;
        font-family: 'Montserrat', sans-serif;
        margin: 0;
        height: 100vh;
        width: 100vw;
        overflow: hidden;
      }

      #current-date-container {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        font-size: clamp(8rem, 35vw, 40rem);
        font-weight: 900;
        line-height: 0.8;
        letter-spacing: -0.05em;
        color: rgba(255, 255, 255, 0.8);
        z-index: 1;
        user-select: none;
        pointer-events: none;
        white-space: nowrap;
      }

      .grid {
        position: relative;
        width: 100%;
        height: 100%;
        z-index: 2;
      }

      .card {
        position: absolute;
        width: var(--card-size);
        height: var(--card-size);
        transition: transform 0.3s ease;
      }

      .card:hover { transform: scale(1.1); }

      .card img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        filter: brightness(0); /* Sagoma nera */
        transition: filter 0.4s ease-in-out;
      }

      .card:hover img {
        filter: brightness(1); /* Immagine a colori */
      }

      .card-details { display: none; position: absolute; top: 50%; left: 50%; background-color: rgba(15, 15, 15, 0.95); padding: 1.5rem; border-radius: 8px; border: 1px solid rgba(255, 255, 255, 0.1); width: 320px; z-index: 10; color: #eee; text-align: left; opacity: 0; visibility: hidden; transform: translate(-50%, -50%) scale(0.95); transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease; }
      .card-details.visible { display: block; opacity: 1; visibility: visible; transform: translate(-50%, -50%) scale(1); }
      .card-details h3 { margin-top: 0; font-size: 1.5rem; font-weight: 700; }
      .card-details p, .card-details span { font-size: 1rem; line-height: 1.5; margin-bottom: 0.5rem; }
      .category { display: inline-block; padding: 0.2em 0.6em; background-color: #555; border-radius: 4px; font-size: 0.8rem; margin-bottom: 1rem; text-transform: uppercase; }

      /* Stili Link Calendario e Form */
      .form-container {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        z-index: 1000;
      }

      .calendar-link {
        display: block;
        background-color: #222;
        color: #fff;
        padding: 0.8rem 1.5rem;
        border-radius: 8px;
        border: 1px solid #444;
        cursor: pointer;
        text-decoration: none;
        font-size: 14px;
        transition: background-color 0.2s;
        margin-bottom: 1rem;
      }

      .calendar-link:hover {
        background-color: #333;
      }

      .contribute-section summary { background-color: #222; color: #fff; padding: 0.8rem 1.5rem; border-radius: 8px; border: 1px solid #444; cursor: pointer; list-style: none; transition: background-color 0.2s; }
      .contribute-section summary::-webkit-details-marker { display: none; }
      .contribute-section summary:hover { background-color: #333; }
      .contribute-form { background-color: #111; padding: 1.5rem; border-radius: 8px; border: 1px solid #444; width: 300px; margin-top: 1rem; box-sizing: border-box;}
      .form-group { margin-bottom: 1.2rem; }
      .form-group label { display: block; margin-bottom: 0.5rem; font-size: 0.9rem; color: #aaa; }
      .form-group input, .form-group textarea, .form-group select { width: 100%; padding: 0.6rem; background-color: transparent; border: none; border-bottom: 1px solid #555; color: #fff; font-family: 'Montserrat', sans-serif; font-size: 1rem; transition: border-color 0.2s; box-sizing: border-box; }
      .form-group input:focus, .form-group textarea:focus, .form-group select:focus { outline: none; border-bottom-color: #fff; }
      .form-group small { display: block; margin-top: 0.4rem; font-size: 0.8rem; color: #777; }
      .submit-btn { width: 100%; padding: 0.8rem; background-color: #eee; color: #111; border: none; border-radius: 5px; font-size: 1rem; font-weight: 700; cursor: pointer; transition: background-color 0.2s; }
      .submit-btn:hover:not(:disabled) { background-color: #fff; }
      .submit-btn:disabled { background-color: #555; color: #888; cursor: not-allowed; }
      .form-message { margin-top: 1rem; padding: 0.8rem; border-radius: 5px; font-size: 0.9rem; display: none; }
      .form-message.success { display: block; background-color: #2a4a37; color: #a7d7b9; }
      .form-message.error { display: block; background-color: #5a2a2a; color: #f7baba; }
    </style>
</head>
<body>

    <div id="current-date-container"></div>

    <div class="grid">
      {seasonalItems.map(item => (
        <div class="card">
          {item.image && <img src={item.image} alt={item.name} />}

          <div class="card-details">
            <h3>{item.name}</h3>
            {item.category && <span class="category">{item.category</span>}
            <p>{item.description}</p>
            <p><strong>Seasonality:</strong> {item.seasonality}</p>
            <p><strong>Region:</strong> {item.region}</p>
            <p><strong>Producers:</strong> {item.producers}</p>
          </div>
        </div>
      ))}
    </div>

    <div class="form-container">
      {/* MODIFICA QUI: Aggiunto 'transition:animate' per slide */}
      <a
        href="/calendario"
        class="calendar-link"
        transition:animate={slide({ duration: '0.4s' })}
      >
        Vedi Calendario Stagionalità
      </a>

      {/* Rimosso <details> duplicato */}
      <details class="contribute-section">
        <summary>Vuoi contribuire all'archivio?</summary>

        <form id="contribute-form" class="contribute-form">
          <div class="form-group">
            <label for="name">Name *</label>
            <input type="text" id="name" name="name" required>
          </div>

          <div class="form-group">
            <label for="description">Description *</label>
            <textarea id="description" name="description" rows="4" required></textarea>
          </div>

          <div class="form-group">
            <label for="category">Categoria</label>
            <select id="category" name="category">
              <option value="">Seleziona...</option>
              {/* Le opzioni dovrebbero essere dinamiche o più generiche */}
              <option value="Frutta">Frutta</option>
              <option value="Verdura">Verdura</option>
              <option value="Carne">Carne</option>
              <option value="Pesce">Pesce</option>
              <option value="Formaggio">Formaggio</option>
              <option value="Altro">Altro</option>
            </select>
          </div>

          <div class="form-group">
            <label for="image-url">URL Immagine</label>
            <input
              type="url"
              id="image-url"
              name="imageUrl"
              placeholder="https://esempio.com/immagine.jpg">
            <small>Inserisci il link di un'immagine già online</small>
          </div>

          <button type="submit" class="submit-btn">Invia contributo</button>
          <div id="form-message" class="form-message"></div>
        </form>
      </details>
      {/* Rimosso </div> extra */}
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {

        // --- 1. LOGICA DATA E IMMAGINI ---
        const dateContainer = document.getElementById('current-date-container');
        const today = new Date();
        const day = today.getDate();
        const month = today.toLocaleDateString('en-US', { month: 'short' }).toUpperCase();
        dateContainer.textContent = `${day} ${month}`;

        const cards = document.querySelectorAll('.card');
        const grid = document.querySelector('.grid');
        const gridWidth = grid.offsetWidth;
        const gridHeight = grid.offsetHeight;
        const cardSize = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--card-size'));
        const margin = 50;

        cards.forEach(card => {
            const availableWidth = gridWidth - cardSize - (margin * 2);
            const availableHeight = gridHeight - cardSize - (margin * 2);
            const randomX = margin + (Math.random() * availableWidth);
            const randomY = margin + (Math.random() * availableHeight);
            card.style.top = `${randomY}px`;
            card.style.left = `${randomX}px`;
        });

        cards.forEach(card => {
            const details = card.querySelector('.card-details');
            const image = card.querySelector('img');
            card.addEventListener('click', (event) => {
                event.stopPropagation();
                document.querySelectorAll('.card-details.visible').forEach(visibleDetail => {
                    if (visibleDetail !== details) {
                        visibleDetail.classList.remove('visible');
                        visibleDetail.closest('.card').querySelector('img').style.filter = ''; // Rimuove filtro
                    }
                });
                const isVisible = details.classList.toggle('visible');
                image.style.filter = isVisible ? 'brightness(1)' : ''; // Imposta/rimuove filtro
            });
        });

        document.body.addEventListener('click', () => {
            document.querySelectorAll('.card-details.visible').forEach(visibleDetail => {
                visibleDetail.classList.remove('visible');
                visibleDetail.closest('.card').querySelector('img').style.filter = ''; // Rimuove filtro
            });
        });

        // --- 2. LOGICA FORM CONTRIBUTO ---
        document.getElementById('contribute-form')?.addEventListener('submit', async (e) => {
          e.preventDefault();

          const submitBtn = e.target.querySelector('.submit-btn');
          const messageDiv = document.getElementById('form-message');

          submitBtn.disabled = true;
          submitBtn.textContent = 'Invio in corso...';
          messageDiv.style.display = 'block';
          messageDiv.textContent = 'Invio in corso...';
          messageDiv.className = 'form-message';

          const imageUrl = document.getElementById('image-url').value.trim();

          const formData = {
            Name: document.getElementById('name').value,
            Description: document.getElementById('description').value,
            Category: document.getElementById('category').value,
          };

          if (imageUrl) {
            formData.Edited = [ // Invia al campo 'Edited'
              {
                url: imageUrl
              }
            ];
          }

          try {
            const response = await fetch(`https://api.airtable.com/v0/${import.meta.env.PUBLIC_AIRTABLE_BASE_ID}/${import.meta.env.PUBLIC_AIRTABLE_TABLE_NAME}`, {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${import.meta.env.PUBLIC_AIRTABLE_API_KEY}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                fields: formData
              })
            });

            const responseData = await response.json();

            if (response.ok) {
              messageDiv.textContent = '✅ Contributo inviato con successo! Ricarica la pagina per vederlo.';
              messageDiv.className = 'form-message success';
              e.target.reset();
            } else {
              messageDiv.textContent = `❌ Errore: ${responseData.error?.message || 'Errore sconosciuto'}`;
              messageDiv.className = 'form-message error';
            }
          } catch (error) {
            messageDiv.textContent = '❌ Errore durante l\'invio. Riprova.';
            messageDiv.className = 'form-message error';
          } finally {
            submitBtn.disabled = false;
            submitBtn.textContent = 'Invia contributo';
          }
        });

      });
    </script>

</body>
</html>